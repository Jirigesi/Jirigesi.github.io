I"ó<p>It is quite obvious that so-called deep learning is in fashion, especially in some fields of computer vision. In this post we would like to quantitatively evaluate whether this assertion is indeed true, and learn to do web scraping on the way.
<br />
<br />
<a href="http://en.wikipedia.org/wiki/Web_scraping">Web Scraping</a> consist in extracting useful information from websites by a computer program. In this post Iâ€™ll show a very basic example of web scraping written in Python in order to get the titles of the Computer Vision papers available in the open access repository of <a href="http://www.cv-foundation.org/openaccess/menu.py">CVF</a>. We will then count the number of title with <em>deep-learning-related</em> words in them.
<br />
<br />
Maybe web scraping is an overkill for this example, but it might come in handy for other applications.
First youâ€™ll need to install these dependencies: <a href="http://lxml.de">lxml</a>, 
<a href="http://docs.python-requests.org">Python requests</a>, and for more advanced examples <a href="http://www.crummy.com/software/BeautifulSoup/">Beautiful soup</a>.
<br />
<br />
And here the code:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">from</span> <span class="nn">lxml</span> <span class="kn">import</span> <span class="n">html</span>

<span class="n">conferences</span> <span class="o">=</span> <span class="p">[</span><span class="s">"CVPR2013"</span><span class="p">,</span><span class="s">"ICCV2013"</span><span class="p">,</span><span class="s">"CVPR2014"</span><span class="p">,</span><span class="s">"CVPR2015"</span><span class="p">]</span>

<span class="k">for</span> <span class="n">conf</span> <span class="ow">in</span> <span class="n">conferences</span><span class="p">:</span>
    <span class="c1"># Get the HTML text and find the classes of type 'ptitle'
</span>    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"http://www.cv-foundation.org/openaccess/"</span><span class="o">+</span><span class="n">conf</span><span class="o">+</span><span class="s">".py"</span><span class="p">)</span>
    <span class="n">tree</span> <span class="o">=</span> <span class="n">html</span><span class="p">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
    <span class="n">papers</span> <span class="o">=</span> <span class="n">tree</span><span class="p">.</span><span class="n">find_class</span><span class="p">(</span><span class="s">'ptitle'</span><span class="p">)</span>

    <span class="c1"># Get all titles in a list
</span>    <span class="n">all_titles</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">paper</span> <span class="ow">in</span> <span class="n">papers</span><span class="p">:</span>
        <span class="n">title</span> <span class="o">=</span> <span class="n">paper</span><span class="p">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">'a/text()'</span><span class="p">)</span>
        <span class="n">all_titles</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">title</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>

    <span class="c1"># Search for the 'deep'-inducing keywords
</span>    <span class="n">keywords</span> <span class="o">=</span> <span class="p">[</span><span class="s">'deep'</span><span class="p">,</span> <span class="s">'cnn'</span><span class="p">,</span> <span class="s">'convolutional'</span><span class="p">,</span> <span class="s">'neural network'</span><span class="p">]</span>
    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">title</span> <span class="ow">in</span> <span class="n">all_titles</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">kword</span> <span class="ow">in</span> <span class="n">keywords</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">title</span><span class="p">.</span><span class="n">lower</span><span class="p">().</span><span class="n">find</span><span class="p">(</span><span class="n">kword</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">:</span>
                <span class="n">count</span> <span class="o">=</span> <span class="n">count</span><span class="o">+</span><span class="mi">1</span>
                <span class="k">break</span>
    <span class="n">percent</span> <span class="o">=</span> <span class="n">count</span><span class="o">/</span><span class="nb">float</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">all_titles</span><span class="p">))</span><span class="o">*</span><span class="mi">100</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"%s: %.2f%%"</span> <span class="o">%</span> <span class="p">(</span><span class="n">conf</span><span class="p">,</span> <span class="n">percent</span><span class="p">))</span></code></pre></figure>

<p>As you can see, we scrape four of the last major vision conferences. From the respective websites, we get all titles (class <code class="highlighter-rouge">ptitle</code>), and then we count whether they have <em>deep-learning-related</em> words in them.
And here the results:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="o">&gt;</span> <span class="n">python</span> <span class="n">scraping_cvpr</span><span class="p">.</span><span class="n">py</span>
<span class="n">CVPR2013</span><span class="p">:</span>  <span class="mf">0.85</span><span class="o">%</span>
<span class="n">ICCV2013</span><span class="p">:</span>  <span class="mf">1.54</span><span class="o">%</span>
<span class="n">CVPR2014</span><span class="p">:</span>  <span class="mf">3.70</span><span class="o">%</span>
<span class="n">CVPR2015</span><span class="p">:</span> <span class="mf">14.45</span><span class="o">%</span></code></pre></figure>

<p>And the plot:
<br />
<br />
<img align="middle" src="http://localhost:5000/images/deep_learning.png" alt="..." />
<br />
<br />
Quite impressive, right? So remember to put some of these words on the title of your next CVPR submission. :)</p>
:ET